package compiler

import (
	"github.com/muiscript/monkey-compiler/ast"
	"github.com/muiscript/monkey-compiler/code"
	"github.com/muiscript/monkey-compiler/object"
)

// ByteCode is byte code generated by compiler
type ByteCode struct {
	Instructions code.Instructions
	Constants    []object.Object
}

// Compiler is compiler of monkey
type Compiler struct {
	instructions code.Instructions
	constants    []object.Object
}

// New returns empty compiler
func New() *Compiler {
	return &Compiler{
		code.Instructions{},
		[]object.Object{},
	}
}

// Compile ...
func (c *Compiler) Compile(node ast.Node) error {
	return nil
}

// ByteCode ...
func (c *Compiler) ByteCode() *ByteCode {
	return &ByteCode{
		Instructions: c.instructions,
		Constants:    c.constants,
	}
}
